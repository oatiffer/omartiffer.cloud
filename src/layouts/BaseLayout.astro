---
import "../styles/global.css";
import "@fontsource-variable/fira-code";
import "@fontsource-variable/jetbrains-mono";
import "@fontsource/fira-sans";
import "@fontsource-variable/jost";

import Header from "../components/Header/Header.astro";
import MobileNav from "../components/MobileNav/MobileNav.astro";
import Footer from "../components/Footer.astro";

import { ClientRouter } from "astro:transitions";

const { pageTitle } = Astro.props;
---

<!doctype html>
<html
  lang="en"
  class="font-sans bg-base-300 text-base-content scrollbar-hide"
  transition:animate="none">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
    <ClientRouter />
  </head>
  <body>
    <MobileNav />
    <div
      id="global-container"
      class="min-h-screen flex flex-col transition-all duration-300">
      <Header />
      <main class="transition-all duration-200">
        <slot />
      </main>
      <Footer />
    </div>
  </body>
</html>

<script>
  // Re-apply theme after view transition
  document.addEventListener("astro:page-load", () => {
    const setTheme = (theme: string) => {
      const DARK_THEME = "dark";
      const LIGHT_THEME = "light";

      const darkButton = document.getElementById("button-dark");
      const lightButton = document.getElementById("button-light");

      switch (theme) {
        case DARK_THEME:
          if (!document.documentElement.classList.contains(DARK_THEME)) {
            document.documentElement.classList.add(DARK_THEME);
          }
          document.documentElement.classList.remove(LIGHT_THEME);
          darkButton?.classList.add("hidden");
          lightButton?.classList.remove("hidden");
          break;
        case LIGHT_THEME:
          if (!document.documentElement.classList.contains(LIGHT_THEME)) {
            document.documentElement.classList.add(LIGHT_THEME);
          }
          document.documentElement.classList.remove(DARK_THEME);
          darkButton?.classList.remove("hidden");
          lightButton?.classList.add("hidden");
          break;
      }
    };

    // Get system theme preference
    const systemTheme = window.matchMedia("(prefers-color-scheme: dark)")
      .matches
      ? "dark"
      : "light";

    // Set the initial theme based on localStorage
    const savedTheme = localStorage.getItem("theme");
    if (!savedTheme) {
      setTheme(systemTheme);
    } else {
      setTheme(savedTheme);
    }
  });
</script>
